services:
  postgres-db:
    image: postgres:17
    container_name: pg
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - migrations
      - backend

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - backend

  liquibase-migrate:
    build:
      context: ./migrations
      dockerfile: Dockerfile.liquibase
    container_name: db-migrations
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MIGRATION_VERSION: ${MIGRATION_VERSION}
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_DRIVER: postgresql
    command:
      - "/liquibase/changelog/scripts/migrate.sh"
    networks:
      - migrations

  accounts:
    build:
      context: ./
      dockerfile: ./cmd/Dockerfile
    container_name: accounts
    env_file:
      - ./.env
    volumes:
      - logs_data:/usr/share/filebeat/logs
    depends_on:
      liquibase-migrate:
        condition: service_completed_successfully
      elasticsearch:
        condition:  service_started
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 9000
    networks:
      - backend
    ports:
      - "9112:8080"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    container_name: elasticsearch
    volumes:
      - ./configs/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - backend

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.5.1
    user: root
    volumes:
      - logs_data:/usr/share/filebeat/logs:ro
      - filebeat_data:/usr/share/filebeat/data
      - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      - elasticsearch
    networks:
      - backend

volumes:
  clickhouse_data:
  logs_data:
  filebeat_data:

networks:
  migrations:
    driver: bridge
  backend:
    driver: bridge
    name: shared-backend